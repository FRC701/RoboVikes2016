// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::chassisLeft1;
std::shared_ptr<CANTalon> RobotMap::chassisLeft2;
std::shared_ptr<CANTalon> RobotMap::chassisLeft3;
std::shared_ptr<CANTalon> RobotMap::chassisRight1;
std::shared_ptr<CANTalon> RobotMap::chassisRight2;
std::shared_ptr<CANTalon> RobotMap::chassisRight3;
std::shared_ptr<DoubleSolenoid> RobotMap::chassisShift;
std::shared_ptr<CANTalon> RobotMap::intakeintakeIn;
std::shared_ptr<CANTalon> RobotMap::intakeintakeSide;
std::shared_ptr<CANTalon> RobotMap::intakeintakearmLeft;
std::shared_ptr<CANTalon> RobotMap::intakeintakearmRight;
std::shared_ptr<CANTalon> RobotMap::shootershooterLeft;
std::shared_ptr<CANTalon> RobotMap::shootershooterRight;
std::shared_ptr<CANTalon> RobotMap::shooterRoller;
std::shared_ptr<DoubleSolenoid> RobotMap::shooterliftShooter;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    chassisLeft1.reset(new CANTalon(8));
    lw->AddActuator("Chassis", "leftMotor1", chassisLeft1);
    
    chassisLeft2.reset(new CANTalon(9));
    lw->AddActuator("Chassis", "leftMotor2", chassisLeft2);
    
    chassisLeft3.reset(new CANTalon(10));
    lw->AddActuator("Chassis", "leftMotor3", chassisLeft3);
    
    chassisRight1.reset(new CANTalon(4));
    lw->AddActuator("Chassis", "rightMotor1", chassisRight1);
    
    chassisRight2.reset(new CANTalon(5));
    lw->AddActuator("Chassis", "rightMotor2", chassisRight2);
    
    chassisRight3.reset(new CANTalon(6));
    lw->AddActuator("Chassis", "rightMotor3", chassisRight3);
    
    chassisShift.reset(new DoubleSolenoid(0, 1));
    lw->AddActuator("Chassis", "shiftLeft", chassisShift);
    
    intakeintakeIn.reset(new CANTalon(7));
    lw->AddActuator("Intake", "intakeMotor1", intakeintakeIn);
    
    intakeintakeSide.reset(new CANTalon(11));
    lw->AddActuator("Intake", "intakeMotor2", intakeintakeSide);
    
    intakeintakearmLeft.reset(new CANTalon(12));
    lw->AddActuator("Intake", "intakeMotor3", intakeintakearmLeft);
    
    intakeintakearmRight.reset(new CANTalon(13));
    lw->AddActuator("Intake", "intakeMotor4", intakeintakearmRight);
    
    shootershooterLeft.reset(new CANTalon(1));
    lw->AddActuator("Shooter", "shooterMotor1", shootershooterLeft);
    
    shootershooterRight.reset(new CANTalon(2));
    lw->AddActuator("Shooter", "shooterMotor2", shootershooterRight);
    
    shooterRoller.reset(new CANTalon(3));
    lw->AddActuator("Shooter", "rollerMotor", shooterRoller);
    
    shooterliftShooter.reset(new DoubleSolenoid(2, 3));
    lw->AddActuator("Shooter", "liftShooter", shooterliftShooter);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
