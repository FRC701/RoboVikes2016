// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

//


#include "Intake.h"
#include "../RobotMap.h"
#include "../Commands/DefaultIntake.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Intake::Intake() : Subsystem("Intake") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    intakeMotor1 = RobotMap::intakeintakeMotor1;		//TODO Change name to better suit location.
    intakeMotor2 = RobotMap::intakeintakeMotor2;
    intakeMotor3 = RobotMap::intakeintakeMotor3;
    intakeMotor4 = RobotMap::intakeintakeMotor4;

    /*intakeMotor3->SetFeedbackDevice(CANTalon::CtreMagEncoder_Absolute);
    intakeMotor3->SetSensorDirection(false);
    intakeMotor3->ConfigNominalOutputVoltage(+0.0f, -0.0f);
    intakeMotor3->ConfigPeakOutputVoltage(+12.0f, -12.0f);
    intakeMotor3->SelectProfileSlot(0);
    intakeMotor3->SetF(0.024);
    intakeMotor3->SetP(0.057);
    intakeMotor3->SetI(0.0);
    intakeMotor3->SetD(0.0);*/

    /*intakeMotor4->SetFeedbackDevice(CANTalon::CtreMagEncoder_Absolute);
    intakeMotor4->SetSensorDirection(false);
    intakeMotor4->ConfigNominalOutputVoltage(+0.0f, -0.0f);
    intakeMotor4->ConfigPeakOutputVoltage(+12.0f, -12.0f);
    intakeMotor4->SelectProfileSlot(0);
    intakeMotor4->SetP(0.0);
    intakeMotor4->SetI(0.0);
    intakeMotor4->SetD(0.0);*/
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void Intake::InitDefaultCommand() {

	SetDefaultCommand(new DefaultIntake());
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

