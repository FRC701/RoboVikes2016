// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "TimedWideTurn.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

TimedWideTurn::TimedWideTurn(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void TimedWideTurn::Initialize() {


}

// Called repeatedly when this Command is scheduled to run
void TimedWideTurn::Execute() {
	if (direction == 'r'){
		RobotMap::chassisleftMotor1->Set(speed);
		RobotMap::chassisleftMotor2->Set(speed);
		RobotMap::chassisleftMotor3->Set(speed);
		RobotMap::chassisrightMotor1->Set(speed/2);
		RobotMap::chassisrightMotor2->Set(speed/2);
		RobotMap::chassisrightMotor3->Set(speed/2);
	}
	else if (direction == 'l'){
		RobotMap::chassisleftMotor1->Set(speed/2);
		RobotMap::chassisleftMotor2->Set(speed/2);
		RobotMap::chassisleftMotor3->Set(speed/2);
		RobotMap::chassisrightMotor1->Set(speed);
		RobotMap::chassisrightMotor2->Set(speed);
		RobotMap::chassisrightMotor3->Set(speed);

	}

}

// Make this return true when this Command no longer needs to run execute()
bool TimedWideTurn::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void TimedWideTurn::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void TimedWideTurn::Interrupted() {

}
