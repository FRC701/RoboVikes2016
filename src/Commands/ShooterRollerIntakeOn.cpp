// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ShooterRollerIntakeOn.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ShooterRollerIntakeOn::ShooterRollerIntakeOn(double speed): Command() {
    mspeed = speed;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
	Requires(Robot::shooter.get());

}

// Called just before this Command runs the first time
void ShooterRollerIntakeOn::Initialize() {
	RobotMap::shooterliftShooter->Set(DoubleSolenoid::kReverse);
}

// Called repeatedly when this Command is scheduled to run
void ShooterRollerIntakeOn::Execute() {
	RobotMap::shooterrollerMotor->Set(-1 *mspeed);
	RobotMap::shootershooterMotor1->Set(-1 * mspeed);
	RobotMap::shootershooterMotor2->Set(-1 * mspeed);


}

// Make this return true when this Command no longer needs to run execute()
bool ShooterRollerIntakeOn::IsFinished() {
    return RobotMap::shooterrollerMotor->IsFwdLimitSwitchClosed();
}

// Called once after isFinished returns true
void ShooterRollerIntakeOn::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShooterRollerIntakeOn::Interrupted() {

}
